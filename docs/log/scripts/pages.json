[{"name":"const val ASSERT: Int = 7","description":"net.mm2d.log.Logger.ASSERT","location":"log/net.mm2d.log/-logger/-a-s-s-e-r-t.html","searchKeys":["ASSERT","const val ASSERT: Int = 7","net.mm2d.log.Logger.ASSERT"]},{"name":"const val DEBUG: Int = 3","description":"net.mm2d.log.Logger.DEBUG","location":"log/net.mm2d.log/-logger/-d-e-b-u-g.html","searchKeys":["DEBUG","const val DEBUG: Int = 3","net.mm2d.log.Logger.DEBUG"]},{"name":"const val ERROR: Int = 6","description":"net.mm2d.log.Logger.ERROR","location":"log/net.mm2d.log/-logger/-e-r-r-o-r.html","searchKeys":["ERROR","const val ERROR: Int = 6","net.mm2d.log.Logger.ERROR"]},{"name":"const val INFO: Int = 4","description":"net.mm2d.log.Logger.INFO","location":"log/net.mm2d.log/-logger/-i-n-f-o.html","searchKeys":["INFO","const val INFO: Int = 4","net.mm2d.log.Logger.INFO"]},{"name":"const val VERBOSE: Int = 2","description":"net.mm2d.log.Logger.VERBOSE","location":"log/net.mm2d.log/-logger/-v-e-r-b-o-s-e.html","searchKeys":["VERBOSE","const val VERBOSE: Int = 2","net.mm2d.log.Logger.VERBOSE"]},{"name":"const val WARN: Int = 5","description":"net.mm2d.log.Logger.WARN","location":"log/net.mm2d.log/-logger/-w-a-r-n.html","searchKeys":["WARN","const val WARN: Int = 5","net.mm2d.log.Logger.WARN"]},{"name":"fun Throwable.toSimpleStackTraceString(classPrefix: Set<String> = emptySet()): String","description":"net.mm2d.log.toSimpleStackTraceString","location":"log/net.mm2d.log/to-simple-stack-trace-string.html","searchKeys":["toSimpleStackTraceString","fun Throwable.toSimpleStackTraceString(classPrefix: Set<String> = emptySet()): String","net.mm2d.log.toSimpleStackTraceString"]},{"name":"fun Throwable.toStackTraceString(): String","description":"net.mm2d.log.toStackTraceString","location":"log/net.mm2d.log/to-stack-trace-string.html","searchKeys":["toStackTraceString","fun Throwable.toStackTraceString(): String","net.mm2d.log.toStackTraceString"]},{"name":"fun appendCaller(append: Boolean)","description":"net.mm2d.log.DefaultSender.appendCaller","location":"log/net.mm2d.log/-default-sender/append-caller.html","searchKeys":["appendCaller","fun appendCaller(append: Boolean)","net.mm2d.log.DefaultSender.appendCaller"]},{"name":"fun appendCaller(append: Boolean)","description":"net.mm2d.log.Senders.appendCaller","location":"log/net.mm2d.log/-senders/append-caller.html","searchKeys":["appendCaller","fun appendCaller(append: Boolean)","net.mm2d.log.Senders.appendCaller"]},{"name":"fun appendThread(append: Boolean)","description":"net.mm2d.log.DefaultSender.appendThread","location":"log/net.mm2d.log/-default-sender/append-thread.html","searchKeys":["appendThread","fun appendThread(append: Boolean)","net.mm2d.log.DefaultSender.appendThread"]},{"name":"fun appendThread(append: Boolean)","description":"net.mm2d.log.Senders.appendThread","location":"log/net.mm2d.log/-senders/append-thread.html","searchKeys":["appendThread","fun appendThread(append: Boolean)","net.mm2d.log.Senders.appendThread"]},{"name":"fun create(): Sender","description":"net.mm2d.log.Senders.create","location":"log/net.mm2d.log/-senders/create.html","searchKeys":["create","fun create(): Sender","net.mm2d.log.Senders.create"]},{"name":"fun create(printer: Printer): Sender","description":"net.mm2d.log.DefaultSender.create","location":"log/net.mm2d.log/-default-sender/create.html","searchKeys":["create","fun create(printer: Printer): Sender","net.mm2d.log.DefaultSender.create"]},{"name":"fun d(message: String?, vararg args: Any?)","description":"net.mm2d.log.Logger.d","location":"log/net.mm2d.log/-logger/d.html","searchKeys":["d","fun d(message: String?, vararg args: Any?)","net.mm2d.log.Logger.d"]},{"name":"fun d(supplier: () -> String?)","description":"net.mm2d.log.Logger.d","location":"log/net.mm2d.log/-logger/d.html","searchKeys":["d","fun d(supplier: () -> String?)","net.mm2d.log.Logger.d"]},{"name":"fun d(throwable: Throwable?)","description":"net.mm2d.log.Logger.d","location":"log/net.mm2d.log/-logger/d.html","searchKeys":["d","fun d(throwable: Throwable?)","net.mm2d.log.Logger.d"]},{"name":"fun d(throwable: Throwable?, message: String?, vararg args: Any?)","description":"net.mm2d.log.Logger.d","location":"log/net.mm2d.log/-logger/d.html","searchKeys":["d","fun d(throwable: Throwable?, message: String?, vararg args: Any?)","net.mm2d.log.Logger.d"]},{"name":"fun d(throwable: Throwable?, supplier: () -> String?)","description":"net.mm2d.log.Logger.d","location":"log/net.mm2d.log/-logger/d.html","searchKeys":["d","fun d(throwable: Throwable?, supplier: () -> String?)","net.mm2d.log.Logger.d"]},{"name":"fun e(message: String?, vararg args: Any?)","description":"net.mm2d.log.Logger.e","location":"log/net.mm2d.log/-logger/e.html","searchKeys":["e","fun e(message: String?, vararg args: Any?)","net.mm2d.log.Logger.e"]},{"name":"fun e(supplier: () -> String?)","description":"net.mm2d.log.Logger.e","location":"log/net.mm2d.log/-logger/e.html","searchKeys":["e","fun e(supplier: () -> String?)","net.mm2d.log.Logger.e"]},{"name":"fun e(throwable: Throwable?)","description":"net.mm2d.log.Logger.e","location":"log/net.mm2d.log/-logger/e.html","searchKeys":["e","fun e(throwable: Throwable?)","net.mm2d.log.Logger.e"]},{"name":"fun e(throwable: Throwable?, message: String?, vararg args: Any?)","description":"net.mm2d.log.Logger.e","location":"log/net.mm2d.log/-logger/e.html","searchKeys":["e","fun e(throwable: Throwable?, message: String?, vararg args: Any?)","net.mm2d.log.Logger.e"]},{"name":"fun e(throwable: Throwable?, supplier: () -> String?)","description":"net.mm2d.log.Logger.e","location":"log/net.mm2d.log/-logger/e.html","searchKeys":["e","fun e(throwable: Throwable?, supplier: () -> String?)","net.mm2d.log.Logger.e"]},{"name":"fun i(message: String?, vararg args: Any?)","description":"net.mm2d.log.Logger.i","location":"log/net.mm2d.log/-logger/i.html","searchKeys":["i","fun i(message: String?, vararg args: Any?)","net.mm2d.log.Logger.i"]},{"name":"fun i(supplier: () -> String?)","description":"net.mm2d.log.Logger.i","location":"log/net.mm2d.log/-logger/i.html","searchKeys":["i","fun i(supplier: () -> String?)","net.mm2d.log.Logger.i"]},{"name":"fun i(throwable: Throwable?)","description":"net.mm2d.log.Logger.i","location":"log/net.mm2d.log/-logger/i.html","searchKeys":["i","fun i(throwable: Throwable?)","net.mm2d.log.Logger.i"]},{"name":"fun i(throwable: Throwable?, message: String?, vararg args: Any?)","description":"net.mm2d.log.Logger.i","location":"log/net.mm2d.log/-logger/i.html","searchKeys":["i","fun i(throwable: Throwable?, message: String?, vararg args: Any?)","net.mm2d.log.Logger.i"]},{"name":"fun i(throwable: Throwable?, supplier: () -> String?)","description":"net.mm2d.log.Logger.i","location":"log/net.mm2d.log/-logger/i.html","searchKeys":["i","fun i(throwable: Throwable?, supplier: () -> String?)","net.mm2d.log.Logger.i"]},{"name":"fun makeMessage(message: String, throwable: Throwable?): String","description":"net.mm2d.log.makeMessage","location":"log/net.mm2d.log/make-message.html","searchKeys":["makeMessage","fun makeMessage(message: String, throwable: Throwable?): String","net.mm2d.log.makeMessage"]},{"name":"fun makeThreadInfo(): String","description":"net.mm2d.log.makeThreadInfo","location":"log/net.mm2d.log/make-thread-info.html","searchKeys":["makeThreadInfo","fun makeThreadInfo(): String","net.mm2d.log.makeThreadInfo"]},{"name":"fun setLogLevel(level: Int)","description":"net.mm2d.log.Logger.setLogLevel","location":"log/net.mm2d.log/-logger/set-log-level.html","searchKeys":["setLogLevel","fun setLogLevel(level: Int)","net.mm2d.log.Logger.setLogLevel"]},{"name":"fun setSender(sender: Sender?)","description":"net.mm2d.log.Logger.setSender","location":"log/net.mm2d.log/-logger/set-sender.html","searchKeys":["setSender","fun setSender(sender: Sender?)","net.mm2d.log.Logger.setSender"]},{"name":"fun v(message: String?, vararg args: Any?)","description":"net.mm2d.log.Logger.v","location":"log/net.mm2d.log/-logger/v.html","searchKeys":["v","fun v(message: String?, vararg args: Any?)","net.mm2d.log.Logger.v"]},{"name":"fun v(supplier: () -> String?)","description":"net.mm2d.log.Logger.v","location":"log/net.mm2d.log/-logger/v.html","searchKeys":["v","fun v(supplier: () -> String?)","net.mm2d.log.Logger.v"]},{"name":"fun v(throwable: Throwable?)","description":"net.mm2d.log.Logger.v","location":"log/net.mm2d.log/-logger/v.html","searchKeys":["v","fun v(throwable: Throwable?)","net.mm2d.log.Logger.v"]},{"name":"fun v(throwable: Throwable?, message: String?, vararg args: Any?)","description":"net.mm2d.log.Logger.v","location":"log/net.mm2d.log/-logger/v.html","searchKeys":["v","fun v(throwable: Throwable?, message: String?, vararg args: Any?)","net.mm2d.log.Logger.v"]},{"name":"fun v(throwable: Throwable?, supplier: () -> String?)","description":"net.mm2d.log.Logger.v","location":"log/net.mm2d.log/-logger/v.html","searchKeys":["v","fun v(throwable: Throwable?, supplier: () -> String?)","net.mm2d.log.Logger.v"]},{"name":"fun w(message: String?, vararg args: Any?)","description":"net.mm2d.log.Logger.w","location":"log/net.mm2d.log/-logger/w.html","searchKeys":["w","fun w(message: String?, vararg args: Any?)","net.mm2d.log.Logger.w"]},{"name":"fun w(supplier: () -> String?)","description":"net.mm2d.log.Logger.w","location":"log/net.mm2d.log/-logger/w.html","searchKeys":["w","fun w(supplier: () -> String?)","net.mm2d.log.Logger.w"]},{"name":"fun w(throwable: Throwable?)","description":"net.mm2d.log.Logger.w","location":"log/net.mm2d.log/-logger/w.html","searchKeys":["w","fun w(throwable: Throwable?)","net.mm2d.log.Logger.w"]},{"name":"fun w(throwable: Throwable?, message: String?, vararg args: Any?)","description":"net.mm2d.log.Logger.w","location":"log/net.mm2d.log/-logger/w.html","searchKeys":["w","fun w(throwable: Throwable?, message: String?, vararg args: Any?)","net.mm2d.log.Logger.w"]},{"name":"fun w(throwable: Throwable?, supplier: () -> String?)","description":"net.mm2d.log.Logger.w","location":"log/net.mm2d.log/-logger/w.html","searchKeys":["w","fun w(throwable: Throwable?, supplier: () -> String?)","net.mm2d.log.Logger.w"]},{"name":"object DefaultSender","description":"net.mm2d.log.DefaultSender","location":"log/net.mm2d.log/-default-sender/index.html","searchKeys":["DefaultSender","object DefaultSender","net.mm2d.log.DefaultSender"]},{"name":"object Logger","description":"net.mm2d.log.Logger","location":"log/net.mm2d.log/-logger/index.html","searchKeys":["Logger","object Logger","net.mm2d.log.Logger"]},{"name":"object Senders","description":"net.mm2d.log.Senders","location":"log/net.mm2d.log/-senders/index.html","searchKeys":["Senders","object Senders","net.mm2d.log.Senders"]}]
